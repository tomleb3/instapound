[{"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\index.js":"1","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\App.js":"3","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\store.js":"5","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\Home.jsx":"6","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\Explore.jsx":"7","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\Direct.jsx":"8","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\LoginSignup.jsx":"9","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\Activity.jsx":"10","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\UserProfile.jsx":"11","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\About.jsx":"12","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\actions\\subscriptionActions.js":"13","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\AppHeader.jsx":"14","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\actions\\userActions.js":"15","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\userService.js":"16","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\subscriptionService.js":"17","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\postService.js":"18","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\utilService.js":"19","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\index.js":"20","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\httpService.js":"21","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\postReducer.js":"22","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\likeReducer.js":"23","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\subscriptionReducer.js":"24","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\commentReducer.js":"25","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\userReducer.js":"26","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\likeService.js":"27","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\commentService.js":"28","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\AppFooter.jsx":"29","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\AppFilter.jsx":"30","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\CloudinaryUploader.jsx":"31","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\cloudinaryService.js":"32","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\PostDetails.jsx":"33","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\UserPosts.jsx":"34","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\CreatePost.jsx":"35","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\actions\\likeActions.js":"36","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\FeedList.jsx":"37","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostPreview.jsx":"38","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\AddComment.jsx":"39","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\UserContainer.jsx":"40","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\ActionBtns.jsx":"41","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\LikeRender.jsx":"42","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\CommentRender.jsx":"43","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\TimeContainer.jsx":"44"},{"size":1044,"mtime":1616333012087,"results":"45","hashOfConfig":"46"},{"size":364,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":2313,"mtime":1621875601249,"results":"48","hashOfConfig":"46"},{"size":5064,"mtime":499162500000,"results":"49","hashOfConfig":"46"},{"size":320,"mtime":1610544136702,"results":"50","hashOfConfig":"46"},{"size":1870,"mtime":1621875608159,"results":"51","hashOfConfig":"46"},{"size":131,"mtime":1621875606542,"results":"52","hashOfConfig":"46"},{"size":137,"mtime":1621875240080,"results":"53","hashOfConfig":"46"},{"size":14156,"mtime":1620459164541,"results":"54","hashOfConfig":"46"},{"size":96,"mtime":1615366735047,"results":"55","hashOfConfig":"46"},{"size":7782,"mtime":1621875418894,"results":"56","hashOfConfig":"46"},{"size":90,"mtime":1615366737164,"results":"57","hashOfConfig":"46"},{"size":1164,"mtime":1616356342954,"results":"58","hashOfConfig":"46"},{"size":6198,"mtime":1621329833391,"results":"59","hashOfConfig":"46"},{"size":1780,"mtime":1616163517977,"results":"60","hashOfConfig":"46"},{"size":1999,"mtime":1621349312886,"results":"61","hashOfConfig":"46"},{"size":453,"mtime":1616093704933,"results":"62","hashOfConfig":"46"},{"size":643,"mtime":1621776663712,"results":"63","hashOfConfig":"46"},{"size":1800,"mtime":1621876382364,"results":"64","hashOfConfig":"46"},{"size":510,"mtime":1616083208000,"results":"65","hashOfConfig":"46"},{"size":1081,"mtime":1616158431842,"results":"66","hashOfConfig":"46"},{"size":885,"mtime":1615041323688,"results":"67","hashOfConfig":"46"},{"size":536,"mtime":1616083270451,"results":"68","hashOfConfig":"46"},{"size":656,"mtime":1616083263295,"results":"69","hashOfConfig":"46"},{"size":797,"mtime":1615312048285,"results":"70","hashOfConfig":"46"},{"size":821,"mtime":1615890743127,"results":"71","hashOfConfig":"46"},{"size":353,"mtime":1617801028212,"results":"72","hashOfConfig":"46"},{"size":455,"mtime":1617381438723,"results":"73","hashOfConfig":"46"},{"size":2073,"mtime":1621329648206,"results":"74","hashOfConfig":"46"},{"size":1755,"mtime":1621448305355,"results":"75","hashOfConfig":"46"},{"size":1024,"mtime":1621764205792,"results":"76","hashOfConfig":"46"},{"size":586,"mtime":1621673742090,"results":"77","hashOfConfig":"46"},{"size":1290,"mtime":1621875142128,"results":"78","hashOfConfig":"46"},{"size":1869,"mtime":1621791056119,"results":"79","hashOfConfig":"46"},{"size":1627,"mtime":1621844120887,"results":"80","hashOfConfig":"46"},{"size":970,"mtime":1621846624652,"results":"81","hashOfConfig":"46"},{"size":352,"mtime":1621858415668,"results":"82","hashOfConfig":"46"},{"size":3077,"mtime":1621867767832,"results":"83","hashOfConfig":"46"},{"size":1600,"mtime":1621854980651,"results":"84","hashOfConfig":"46"},{"size":1036,"mtime":1621858066293,"results":"85","hashOfConfig":"46"},{"size":3236,"mtime":1621857713713,"results":"86","hashOfConfig":"46"},{"size":496,"mtime":1621858186820,"results":"87","hashOfConfig":"46"},{"size":2132,"mtime":1621869138057,"results":"88","hashOfConfig":"46"},{"size":226,"mtime":1621865810010,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"bkv7b1",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\index.js",[],["183","184"],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\App.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\store.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\Home.jsx",["185","186"],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\Explore.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\Direct.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\LoginSignup.jsx",["187"],"import { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect, useLocation } from 'react-router-dom'\r\nimport { userService } from '../services/userService'\r\nimport {\r\n    login,\r\n    signup,\r\n} from '../store/actions/userActions'\r\n// import { socketService } from '../services/socketService'\r\n\r\nconst _LoginSignup = ({ loggedInUser, login, signup, }) => {\r\n\r\n    const cloudinaryBaseUrl = process.env.REACT_APP_CLOUDINARY_BASE_URL\r\n    const currPage = useLocation().pathname\r\n    const [loginCred, setLoginCred] = useState({ username: '', password: '' })\r\n    const [signupCred, setSignupCred] = useState({\r\n        email: '',\r\n        fullname: '',\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const [signupCredCheck, setSignupCredCheck] = useState({\r\n        emailOk: false,\r\n        usernameOk: false,\r\n        passwordOk: false,\r\n\r\n        emailChecked: false,\r\n        usernameChecked: false,\r\n        passwordChecked: false\r\n    })\r\n    const [userPrefs, setUserPrefs] = useState({\r\n        language: 'english',\r\n        showPassword: false,\r\n        darkMode: false\r\n    })\r\n    const [userMsg, setUserMsg] = useState({\r\n        show: false,\r\n        txt: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        if (loggedInUser) return <Redirect to=\"/\"></Redirect> // Might now work, check in later stage\r\n    }, [loggedInUser])\r\n\r\n    const loginHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        setLoginCred({\r\n            ...loginCred,\r\n            [name]: value\r\n        })\r\n    }\r\n    const signupHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        setSignupCred({\r\n            ...signupCred,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const doLogin = async ev => {\r\n        ev.preventDefault()\r\n        try {\r\n            await login(loginCred)\r\n            if (localStorage['loggedInUser']) {\r\n                // socketService.emit('LOGIN', loggedInUser)\r\n                return <Redirect to=\"/\"></Redirect>\r\n            }\r\n        } catch (err) {\r\n            return setUserMsg({ show: true, txt: err.response.data.errMsg })\r\n        }\r\n    }\r\n    const doSignup = async ev => {\r\n        ev.preventDefault()\r\n        try {\r\n            await signup(signupCred)\r\n            if (localStorage['loggedInUser']) return <Redirect to=\"/\"></Redirect>\r\n        }\r\n        catch (err) {\r\n            return setUserMsg({ show: true, txt: err.response.data.errMsg })\r\n        }\r\n    }\r\n\r\n    const onCredCheck = async () => {\r\n        try {\r\n            const credCheck = await userService.checkCreds(signupCred)\r\n            setSignupCredCheck(credCheck)\r\n            setUserMsg({ ...userMsg, txt: credCheck.errMsg })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    let signupSection = (\r\n        <form className=\"frm-signup flex col\" onSubmit={doSignup}>\r\n            <div className=\"logo\">Instapound</div>\r\n            <h2>Sign up to see photos and videos from your friends.</h2>\r\n            <button type=\"button\" className=\"btn-action active flex j-center a-center\">\r\n                <span className=\"facebook-icon\"></span>\r\n                <label className=\"pointer\">Log in with Facebook</label>\r\n            </button>\r\n            <div className=\"divider-container flex a-center\">\r\n                <div></div>\r\n                <span>or</span>\r\n                <div></div>\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <span className={signupCred.email && 'on-top'}>Email</span>\r\n                <input\r\n                    type=\"text\" name=\"email\"\r\n                    className={signupCred.email && 'while-typing'}\r\n                    value={signupCred.email}\r\n                    onChange={signupHandleChange}\r\n                    onBlur={onCredCheck}\r\n                />\r\n                <div className=\"input-righthand-container\">\r\n                    {signupCred.email && signupCredCheck.emailChecked && <span\r\n                        className={`indication-icon ${signupCredCheck.emailOk\r\n                            ? 'icon-ok' : 'icon-err'}`}></span>}\r\n                </div>\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <span className={signupCred.fullname && 'on-top'}>Full Name</span>\r\n                <input\r\n                    type=\"text\" name=\"fullname\"\r\n                    className={signupCred.fullname && 'while-typing'}\r\n                    value={signupCred.fullname}\r\n                    onChange={signupHandleChange}\r\n                />\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <span className={signupCred.username && 'on-top'}>Username</span>\r\n                <input\r\n                    type=\"text\" name=\"username\"\r\n                    className={signupCred.username && 'while-typing'}\r\n                    value={signupCred.username}\r\n                    onChange={signupHandleChange}\r\n                    onBlur={onCredCheck}\r\n                />\r\n                <div className=\"input-righthand-container\">\r\n                    {signupCred.username && signupCredCheck.usernameChecked && <span\r\n                        className={`indication-icon ${signupCredCheck.usernameOk ? 'icon-ok' : 'icon-err'}`}></span>}\r\n                </div>\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <span className={signupCred.password && 'on-top'}>Password</span>\r\n                <input\r\n                    type={userPrefs.showPassword ? \"text\" : \"password\"} name=\"password\"\r\n                    className={signupCred.password && 'while-typing'}\r\n                    value={signupCred.password}\r\n                    onChange={signupHandleChange}\r\n                    onBlur={onCredCheck}\r\n                />\r\n                <div className=\"input-righthand-container\">\r\n                    {signupCred.password && signupCredCheck.emailChecked && <span\r\n                        className={`indication-icon ${signupCredCheck.passwordOk ? 'icon-ok' : 'icon-err'}`}></span>}\r\n                    {signupCred.password && <button type=\"button\" className=\"show-password\"\r\n                        onClick={() => setUserPrefs({ ...userPrefs, showPassword: !userPrefs.showPassword })}>\r\n                        {userPrefs.showPassword ? 'Hide' : 'Show'}</button>}\r\n                </div>\r\n            </div>\r\n            <button className={`btn-action ${signupCred.email &&\r\n                signupCred.username && signupCred.password.length >= 6 ? 'active' : ''}`}\r\n                type=\"submit\">Sign Up</button>\r\n            {userMsg.show && <p className=\"user-msg\">{userMsg.txt}</p>}\r\n            <div className=\"terms-container\">\r\n                <p>By signing up, you agree to our&nbsp;\r\n                <a href=\"https://www.google.com/\">Terms</a>,&nbsp;\r\n                <a href=\"https://www.google.com/\">Data Policy</a>\r\n                &nbsp;and&nbsp;\r\n                <a href=\"https://www.google.com/\">Cookies Policy</a>&nbsp;.\r\n            </p>\r\n            </div>\r\n        </form>\r\n    )\r\n    let loginSection = (\r\n        <form className=\"frm-login flex col\" onSubmit={doLogin}>\r\n            <div className=\"logo\">Instapound</div>\r\n            <div className=\"input-container\">\r\n                <span className={loginCred.username && 'on-top'}>Username or email</span>\r\n                <input\r\n                    type=\"text\" name=\"username\"\r\n                    className={loginCred.username && 'while-typing'}\r\n                    value={loginCred.username}\r\n                    onChange={loginHandleChange}\r\n                />\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <span className={loginCred.password && 'on-top'}>Password</span>\r\n                <input\r\n                    type={userPrefs.showPassword ? \"text\" : \"password\"} name=\"password\"\r\n                    className={loginCred.password && 'while-typing'}\r\n                    value={loginCred.password}\r\n                    onChange={loginHandleChange}\r\n                />\r\n                <div className=\"input-righthand-container\">\r\n                    {loginCred.password && <button type=\"button\" className=\"show-password\"\r\n                        onClick={() => setUserPrefs({ ...userPrefs, showPassword: !userPrefs.showPassword })}>\r\n                        {userPrefs.showPassword ? 'Hide' : 'Show'}</button>}\r\n                </div>\r\n            </div>\r\n            <button className={`btn-action ${loginCred.username && loginCred.password.length >= 6 && 'active'}`}\r\n                type=\"submit\">Log In</button>\r\n            <div className=\"divider-container flex a-center\">\r\n                <div></div>\r\n                <span>or</span>\r\n                <div></div>\r\n            </div>\r\n            <div className=\"with-facebook-container flex a-center\">\r\n                <span></span>\r\n                <a href=\"https://www.google.com/\">Log in with Facebook</a>\r\n            </div>\r\n            {userMsg.show && <p className=\"user-msg\">{userMsg.txt}</p>}\r\n            <a href=\"https://www.google.com/\" className=\"forgot-pass\">Forgot password?</a>\r\n        </form>\r\n    )\r\n    let forgotPassword = (\r\n        <form className=\"frm-forgotpass flex col\">\r\n\r\n        </form>\r\n    )\r\n\r\n    return <main className=\"login-signup flex col\">\r\n        <section className=\"content-top flex grow\">\r\n            <article className=\"phones-img\">\r\n                <div>\r\n                    <img src={`${cloudinaryBaseUrl}/loginSignup-page/phones-img5_wpcyae.jpg`} alt=\"\" />\r\n                    <img src={`${cloudinaryBaseUrl}/loginSignup-page/phones-img4_qjacpo.jpg`} alt=\"\" />\r\n                    <img src={`${cloudinaryBaseUrl}/loginSignup-page/phones-img3_o7xr3m.jpg`} alt=\"\" />\r\n                    <img src={`${cloudinaryBaseUrl}/loginSignup-page/phones-img2_yo9eld.jpg`} alt=\"\" />\r\n                    <img src={`${cloudinaryBaseUrl}/loginSignup-page/phones-img1_zlmfti.jpg`} alt=\"\" />\r\n                </div>\r\n            </article>\r\n            <article className=\"right-panel flex col j-center a-center\">\r\n                {(!loggedInUser && currPage !== '/signup') && loginSection}\r\n                {(!loggedInUser && currPage === '/signup') && signupSection}\r\n                <div className=\"page-switch-container flex j-center\">\r\n                    {currPage === '/signup' ? <p>Have an account?&nbsp;<Link to=\"/login\" onClick={() => setUserMsg({ show: false, txt: '' })}>Log in</Link></p>\r\n                        : <p>Don't have an account?&nbsp;<Link to=\"/signup\" onClick={() => setUserMsg({ show: false, txt: '' })}>Sign up</Link></p>}\r\n                </div>\r\n                <label>Get the app.</label>\r\n                <div className=\"app-stores-container\">\r\n                    <a href=\"https://itunes.apple.com/app/instagram/id389801252?pt=428156&amp;ct=igweb.loginPage.badge&amp;mt=8&amp;vt=lo\">\r\n                        <img className=\"pointer\" alt=\"\"\r\n                            src={`${cloudinaryBaseUrl}/loginSignup-page/apple-appstore_iciokc.png`} />\r\n                    </a>\r\n                    <a href=\"https://play.google.com/store/apps/details?id=com.instagram.android&amp;\r\n                referrer=utm_source%3Dinstagramweb%26utm_campaign%3DloginPage%26ig_mid%3DF25EDB58\r\n                -AFC5-43F9-B6D3-EFB6C7309776%26utm_content%3Dlo%26utm_medium%3Dbadge\">\r\n                        <img className=\"pointer\" alt=\"\"\r\n                            src={`${cloudinaryBaseUrl}/loginSignup-page/android-googleplay_c0bp6g.png`} />\r\n                    </a>\r\n                </div>\r\n            </article>\r\n        </section>\r\n        <section className=\"content-bottom\">\r\n            <article className=\"links-container\">\r\n                <div className=\"flex wrap j-center\">\r\n                    <a href=\"https://www.google.com/\">About</a>\r\n                    <a href=\"https://www.google.com/\">Blog</a>\r\n                    <a href=\"https://www.google.com/\">Jobs</a>\r\n                    <a href=\"https://www.google.com/\">Help</a>\r\n                    <a href=\"https://www.google.com/\">API</a>\r\n                    <a href=\"https://www.google.com/\">Privacy</a>\r\n                    <a href=\"https://www.google.com/\">Terms</a>\r\n                    <a href=\"https://www.google.com/\">Top Accounts</a>\r\n                    <a href=\"https://www.google.com/\">Hashtags</a>\r\n                    <a href=\"https://www.google.com/\">Locations</a>\r\n                </div>\r\n                <div className=\"flex wrap j-center\">\r\n                    <a href=\"https://www.google.com/\">Beauty</a>\r\n                    <a href=\"https://www.google.com/\">Dance & Performance</a>\r\n                    <a href=\"https://www.google.com/\">Fitness</a>\r\n                    <a href=\"https://www.google.com/\">Food & Drink</a>\r\n                    <a href=\"https://www.google.com/\">Home & Garden</a>\r\n                    <a href=\"https://www.google.com/\">Music</a>\r\n                    <a href=\"https://www.google.com/\">Visual Arts</a>\r\n                </div>\r\n            </article>\r\n            <article className=\"lang-copyright-container flex j-center\">\r\n                <div className=\"flex a-center pointer\">\r\n                    <span className=\"capitalize\">{userPrefs.language}</span>\r\n                    <svg aria-label=\"Down Chevron Icon\" className=\"_8-yf5 \" fill=\"#8e8e8e\" height=\"12\" viewBox=\"0 0 48 48\" width=\"12\">\r\n                        <path d=\"M40 33.5c-.4 0-.8-.1-1.1-.4L24 18.1l-14.9 15c-.6.6-1.5.6-2.1 0s-.6-1.5\r\n                     0-2.1l16-16c.6-.6 1.5-.6 2.1 0l16 16c.6.6.6 1.5 0 2.1-.3.3-.7.4-1.1.4z\"></path>\r\n                    </svg>\r\n                </div>\r\n                <label>© {new Date().getFullYear()} Instapound not from Facebook</label>\r\n            </article>\r\n        </section>\r\n    </main>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login,\r\n    signup,\r\n}\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\Activity.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\UserProfile.jsx",["188"],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\About.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\actions\\subscriptionActions.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\AppHeader.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\userService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\subscriptionService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\postService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\utilService.js",["189"],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\postReducer.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\likeReducer.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\subscriptionReducer.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\commentReducer.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\likeService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\commentService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\AppFooter.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\AppFilter.jsx",["190"],"import { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { userService } from '../services/userService'\r\n\r\nexport const AppFilter = () => {\r\n\r\n    const [filterTxt, setFilterTxt] = useState('')\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        onFilter()\r\n    }, [filterTxt])\r\n\r\n    const handleInput = ev =>\r\n        setFilterTxt(ev.target.value)\r\n\r\n    const onFilter = () =>\r\n        setTimeout(async () =>\r\n            setUsers(await userService.getUsers(filterTxt)), 1000)\r\n\r\n    const clearTxt = () => setFilterTxt('')\r\n\r\n    return <div className=\"filter-container\">\r\n        <form className=\"app-filter\">\r\n            <input type=\"text\" className={filterTxt ? 'active' : ''} value={filterTxt} onChange={handleInput} />\r\n            <div>\r\n                <span></span>\r\n                <p className={filterTxt ? 'hidden' : ''}>Search</p>\r\n            </div>\r\n            <button type=\"button\" onClick={clearTxt}></button>\r\n        </form>\r\n\r\n        <section className={`search-results ${filterTxt ? '' : 'd-none'}`}>\r\n            {filterTxt && <div className=\"dialog-background\" onClick={clearTxt}></div>}\r\n            <div className=\"dialog-arrow\"></div>\r\n            {users.map(user => {\r\n                return <Link to={user.username} key={user._id} onClick={clearTxt}>\r\n                    <img src={user.imgUrl} alt={user.username} />\r\n                    <div className=\"flex col\">\r\n                        <label className=\"fs14 fw600 pointer\">{user.username}</label>\r\n                        <span>{user.fullname}</span>\r\n                    </div>\r\n                </Link>\r\n            })}\r\n            <div className=\"box-shadow\"></div>\r\n        </section>\r\n    </div>\r\n}","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\CloudinaryUploader.jsx",["191"],"import { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { cloudinaryService } from '../services/cloudinaryService'\r\n\r\nexport const CloudinaryUploader = ({ isPostMode }) => {\r\n\r\n    const [uploaded, toggleUploaded] = useState(false)\r\n    const [imgUrl, setImgUrl] = useState('')\r\n    const history = useHistory(null)\r\n\r\n    useEffect(() => {\r\n        if (!uploaded) return\r\n        isPostMode ? onPostUpload() : onUserImgUpload()\r\n    }, [uploaded])\r\n\r\n    useEffect(() => {\r\n        return () => toggleUploaded(false)\r\n    }, [])\r\n\r\n    const onUploadImg = async ev => {\r\n        setImgUrl(await cloudinaryService.uploadImg(ev.target.files[0]))\r\n        toggleUploaded(true)\r\n    }\r\n\r\n    const onPostUpload = () => history.push({ pathname: '/create/details/', imgUrl })\r\n\r\n    const onUserImgUpload = () => {\r\n\r\n    }\r\n\r\n    return <div className=\"cloudinary-uploader\">\r\n        <input onChange={onUploadImg} hidden type=\"file\" accept=\"image/*\" id=\"uploader-input\" />\r\n    </div>\r\n}\r\n","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\services\\cloudinaryService.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\PostDetails.jsx",["192"],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\UserPosts.jsx",["193"],"import { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { postService } from '../services/postService'\r\nimport { utilService } from '../services/utilService'\r\n\r\nexport const UserPosts = ({ username }) => {\r\n\r\n    const [posts, setPosts] = useState([])\r\n    const { makeId } = utilService\r\n\r\n    useEffect(() =>\r\n        (async () =>\r\n            setPosts(await postService.getUserPosts(username)))()\r\n        , [])\r\n\r\n    const postRows = () => {\r\n        let _posts = JSON.parse(JSON.stringify(posts))\r\n        while (_posts.length % 3 !== 0) _posts.push({})\r\n        return _posts.reduce((rows, post, idx) => {\r\n            return (idx % 3 === 0 ? rows.push([post])\r\n                : rows[rows.length - 1].push(post)) && rows\r\n        }, [])\r\n    }\r\n\r\n    return <section className=\"user-posts flex wrap\">\r\n        {postRows().map(postRow => {\r\n            return <div key={makeId()}>{postRow.map(post => {\r\n                return <article key={makeId()}>\r\n                    {post._id && <Link to={{ pathname: `/p/${post._id}/`, post }}>\r\n                        <Fragment>\r\n                            <img className=\"post-img\" src={post.imgUrl} alt=\"\" />\r\n                            <div className=\"d-none\">\r\n                                <div>\r\n                                    <span></span>\r\n                                    <label>{post.likes.length}</label>\r\n                                </div>\r\n                                <div>\r\n                                    <span></span>\r\n                                    <label>{post.comments.length}</label>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    </Link>}\r\n                </article>\r\n            })}\r\n            </div>\r\n        })}\r\n    </section>\r\n}","C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\pages\\CreatePost.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\store\\actions\\likeActions.js",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\FeedList.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostPreview.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\AddComment.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\UserContainer.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\ActionBtns.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\LikeRender.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\CommentRender.jsx",[],"C:\\Users\\Tom\\Sync\\Dev\\Instapound\\frontend\\src\\cmps\\PostCmps\\TimeContainer.jsx",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":16,"column":8,"nodeType":"200","endLine":16,"endColumn":10,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":25,"column":21,"nodeType":"204","endLine":25,"endColumn":105},{"ruleId":"205","severity":1,"message":"206","line":217,"column":9,"nodeType":"207","messageId":"208","endLine":217,"endColumn":23},{"ruleId":"198","severity":1,"message":"209","line":15,"column":8,"nodeType":"200","endLine":15,"endColumn":10,"suggestions":"210"},{"ruleId":"205","severity":1,"message":"211","line":34,"column":11,"nodeType":"207","messageId":"208","endLine":34,"endColumn":16},{"ruleId":"198","severity":1,"message":"212","line":12,"column":8,"nodeType":"200","endLine":12,"endColumn":19,"suggestions":"213"},{"ruleId":"198","severity":1,"message":"214","line":14,"column":8,"nodeType":"200","endLine":14,"endColumn":18,"suggestions":"215"},{"ruleId":"198","severity":1,"message":"216","line":15,"column":8,"nodeType":"200","endLine":15,"endColumn":10,"suggestions":"217"},{"ruleId":"198","severity":1,"message":"218","line":14,"column":11,"nodeType":"200","endLine":14,"endColumn":13,"suggestions":"219"},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedInUser._id'. Either include it or remove the dependency array. If 'setPosts' needs the current value of 'loggedInUser._id', you can also switch to useReducer instead of useState and read 'loggedInUser._id' in the reducer.","ArrayExpression",["222"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'forgotPassword' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["223"],"'month' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onFilter'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has missing dependencies: 'isPostMode' and 'onPostUpload'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has missing dependencies: 'postExists' and 'postId'. Either include them or remove the dependency array.",["226"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array. If 'setPosts' needs the current value of 'username', you can also switch to useReducer instead of useState and read 'username' in the reducer.",["227"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"230","fix":"238"},"Update the dependencies array to be: [loggedInUser._id]",{"range":"239","text":"240"},"Update the dependencies array to be: [username]",{"range":"241","text":"242"},"Update the dependencies array to be: [filterTxt, onFilter]",{"range":"243","text":"244"},"Update the dependencies array to be: [isPostMode, onPostUpload, uploaded]",{"range":"245","text":"246"},"Update the dependencies array to be: [postExists, postId]",{"range":"247","text":"248"},{"range":"249","text":"242"},[570,572],"[loggedInUser._id]",[498,500],"[username]",[327,338],"[filterTxt, onFilter]",[476,486],"[isPostMode, onPostUpload, uploaded]",[526,528],"[postExists, postId]",[458,460]]